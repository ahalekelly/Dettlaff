name: Build and Release Dyno Executables
on:
  push:
    branches: [ master ]
    paths:
      - 'dyno/dyno.py'
      - '.github/workflows/build_dyno.yml'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
      timeout-minutes: 5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      timeout-minutes: 5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      timeout-minutes: 10
      run: |
        pip install --timeout 600 -v --no-cache-dir cx_Freeze~=6.15.9
        pip install --timeout 600 -v --no-cache-dir pyserial~=3.5
        pip install --timeout 600 -v --no-cache-dir matplotlib~=3.9.3
    
    - name: Create setup.py
      shell: pwsh
      run: |
        @"
        from cx_Freeze import setup, Executable
        
        setup(
            name="dyno",
            version="1.0",
            executables=[
                Executable(
                    "dyno/dyno.py",
                    target_name="dyno.exe",
                    base="console"
                )
            ]
        )
        "@ | Out-File -FilePath setup.py -Encoding UTF8

    - name: Build executable
      timeout-minutes: 10
      shell: pwsh
      run: |
        python setup.py build
        New-Item -Path dist -ItemType Directory -Force
        Move-Item build/exe.win*/dyno.exe dist/dyno-windows.exe
    
    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/dyno-windows.exe
        retention-days: 1

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
      timeout-minutes: 5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      timeout-minutes: 5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      timeout-minutes: 10
      run: |
        pip install --timeout 600 -v --no-cache-dir cx_Freeze~=6.15.9
        pip install --timeout 600 -v --no-cache-dir pyserial~=3.5
        pip install --timeout 600 -v --no-cache-dir matplotlib~=3.9.3
    
    - name: Create setup.py
      run: |
        cat > setup.py << 'EOL'
        from cx_Freeze import setup, Executable
        
        setup(
            name="dyno",
            version="1.0",
            executables=[
                Executable(
                    "dyno/dyno.py",
                    target_name="dyno",
                    base="console"
                )
            ]
        )
        EOL

    - name: Build executable
      timeout-minutes: 10
      shell: bash
      run: |
        python setup.py build
        mkdir -p dist
        mv build/exe.macos* dist/dyno-mac
        chmod +x dist/dyno-mac/dyno
        cd dist && zip -r dyno-mac.zip dyno-mac
    
    - name: Upload macOS build
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/dyno-mac.zip
        retention-days: 1

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the date and short SHA
          DATE=$(date +'%Y-%m-%d')
          SHA=$(git rev-parse --short HEAD)
          RELEASE_TAG="build-${DATE}-${SHA}"
          
          # Create release notes with Mac instructions
          cat > release_notes.md << 'EOL'
          Automated build from commit: $(git log -1 --pretty=%B)

          ## Mac Installation Instructions
          1. Download dyno-mac.zip
          2. Double-click to extract
          3. Open Terminal
          4. Navigate to the extracted folder: cd ~/Downloads/dyno-mac
          5. Run the program: ./dyno

          Note: If you get a security warning, go to System Preferences > Security & Privacy and click "Open Anyway"
          EOL
          
          # Create release
          gh release create "$RELEASE_TAG" \
            --title "Build ${DATE} (${SHA})" \
            --notes-file release_notes.md \
            dist/windows-build/dyno-windows.exe \
            dist/macos-build/dyno-mac.zip
